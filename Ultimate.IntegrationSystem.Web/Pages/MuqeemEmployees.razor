@page "/MuqeemEmployees"

@using MudBlazor
@using Newtonsoft.Json
@using Ultimate.IntegrationSystem.Web.Dto
@using Ultimate.IntegrationSystem.Web.Dto.Muqeem
@using Ultimate.IntegrationSystem.Web.Map
@using Ultimate.IntegrationSystem.Web.Models
@using Ultimate.IntegrationSystem.Web.Service
@using Ultimate.IntegrationSystem.Web.Service.Muqeem
@using Ultimate.IntegrationSystem.Web.Pages.Integrations.muqeem.Dialoge

@inject ISnackbar Snackbar
@inject IDialogService DialogService
@inject SelectedEmployeeState SelectedState
@inject NavigationManager Navigation

<MudContainer MaxWidth="MaxWidth.False" Class="pa-0">

    <!-- ===== Header ===== -->
    <MudPaper Class="emp-header" Elevation="2">
        <MudGrid Class="emp-header-grid" AlignItems="Center">
            <MudItem xs="12" md="4" Class="emp-id-col">
                <MudStack AlignItems="AlignItems.Center" Spacing="1">
                    <MudAvatar Class="emp-avatar" Color="Color.Primary">
                        @GetInitials(Employee.FullName)
                    </MudAvatar>
                    <MudText Typo="Typo.subtitle2">@Employee.FullName</MudText>
                    <MudText Typo="Typo.subtitle2" Color="Color.Secondary">@Employee.Department</MudText>
                </MudStack>
            </MudItem>

            <MudItem xs="12" md="8">
                <MudStack Direction="Row" Wrap="Wrap.NoWrap" Class="emp-chips" Spacing="2">
                    <MudChip T="string" Variant="Variant.Outlined" Icon="@Icons.Material.Filled.AddToHomeScreen">
                        المسمى الوظيفي : @Employee.JobTitle
                    </MudChip>
                    <MudChip T="string" Variant="Variant.Outlined" Icon="@Icons.Material.Filled.BorderBottom">
                        الحدود : @Employee.BorderId
                    </MudChip>
                    <MudChip T="string" Variant="Variant.Outlined" Icon="@Icons.Material.Filled.Smartphone">
                        رقم الجوال : @Employee.Mobile
                    </MudChip>
                    <MudChip T="string" Variant="Variant.Outlined" Icon="@Icons.Material.Filled.Call">
                        هاتف : @Employee.Phone
                    </MudChip>
                    <MudChip T="string" Variant="Variant.Outlined" Icon="@Icons.Material.Filled.Email">
                        @Employee.Email
                    </MudChip>
                </MudStack>
            </MudItem>
        </MudGrid>
    </MudPaper>

    <!-- ===== Tabs ===== -->
    <MudTabs Rounded="true" Dense="true" Elevation="2" Centered="true"
             Class="tabs-pills mt-4" @bind-ActivePanelIndex="_activeTab">

        <!-- ================== تبويب الإقامات ================== -->
        <MudTabPanel Icon="@Icons.Material.Filled.Assignment" Text="الإقامات">
            <MudPaper Class="pa-3 mb-3" Elevation="1">
                <MudGrid Class="tight-toolbar" AlignItems="Center" Spacing="2">
                    <MudItem xs="12" md="4" Class="d-flex justify-end">
                        <MudButton Variant="Variant.Outlined" Color="Color.Primary"
                                   StartIcon="@Icons.Material.Filled.Task" OnClick="IssueResidence">
                            إصدار إقامة
                        </MudButton>

                        <MudButton Variant="Variant.Outlined" Color="Color.Secondary"
                                   StartIcon="@Icons.Material.Filled.Refresh" OnClick="RenewResidence">
                            تجديد إقامة
                        </MudButton>
                    </MudItem>
                </MudGrid>
            </MudPaper>

            <MudPaper Elevation="1">
                <MudTable Items="@FilteredResidencies" Dense="true" Hover="true"
                          RightToLeft="RightToLeft.Yes"
                          RowsPerPage="@_residencyRowsPerPage"
                          Breakpoint="Breakpoint.None">
                    <HeaderContent>
                        <MudTh>رقم الإقامة</MudTh>
                        <MudTh>رقم الموظف</MudTh>
                        <MudTh>اسم الموظف</MudTh>
                        <MudTh>نوع الإجراء</MudTh>
                        <MudTh>المهنة</MudTh>
                        <MudTh>رقم المنشأة</MudTh>
                        <MudTh>الجنسية</MudTh>
                        <MudTh>الديانة</MudTh>
                        <MudTh>تاريخ الإصدار</MudTh>
                        <MudTh>انتهاء (ميلادي)</MudTh>
                        <MudTh>انتهاء (هجري)</MudTh>
                        <MudTh>الإجراءات</MudTh>
                    </HeaderContent>

                    <RowTemplate>
                        <MudTd>@context.IqamaNumber</MudTd>
                        <MudTd>@context.EmployeeNumber</MudTd>
                        <MudTd>@context.EmployeeName</MudTd>
                        <MudTd>@context.ActionType</MudTd>
                        <MudTd>@context.IqamaProfession</MudTd>
                        <MudTd>@context.IssueNumber</MudTd>
                        <MudTd>@context.Nationality</MudTd>
                        <MudTd>@context.Religion</MudTd>
                        <MudTd>@context.IssueDate?.ToString("yyyy-MM-dd")</MudTd>
                        <MudTd>@context.IqamaExpiryDateG?.ToString("yyyy-MM-dd")</MudTd>
                        <MudTd>@context.IqamaExpiryDateH</MudTd>
                        <MudTd>
                            <MudIconButton Icon="@Icons.Material.Filled.Edit" Size="Size.Small"
                                           OnClick="@(() => EditResidency(context))" />
                            <MudIconButton Icon="@Icons.Material.Filled.Delete" Size="Size.Small" Color="Color.Error"
                                           OnClick="@(() => DeleteResidency(context))" />
                        </MudTd>
                    </RowTemplate>

                    <PagerContent>
                        <MudTablePager InfoFormat="إظهار {first_item}-{last_item} من أصل {all_items} نتيجة" />
                    </PagerContent>
                </MudTable>
            </MudPaper>
        </MudTabPanel>

        <!-- ================== تبويب جواز السفر ================== -->
        <MudTabPanel Icon="@Icons.Material.Filled.Badge" Text="جواز السفر">
            <!-- هنا نفس الجدول اللي عندك لجواز السفر -->
        </MudTabPanel>

        <!-- ================== تبويب الخروج والعودة ================== -->
        <MudTabPanel Icon="@Icons.Material.Filled.FlightTakeoff" Text="الخروج والعودة">
            <!-- هنا نفس الجدول اللي عندك للخروج والعودة -->
        </MudTabPanel>

        <!-- ================== تبويب الخروج النهائي ================== -->
        <MudTabPanel Icon="@Icons.Material.Filled.ExitToApp" Text="الخروج النهائي">
            <!-- هنا نفس الجدول اللي عندك للخروج النهائي -->
        </MudTabPanel>

    </MudTabs>
</MudContainer>

@code {
    private int _activeTab = 0;
    private EmployeeDto Employee = new();

    private int _residencyRowsPerPage = 10;
    private List<ResidencyRow> _residencies = new();

    private IEnumerable<ResidencyRow> FilteredResidencies =>
        _residencies;

    protected override void OnInitialized()
    {
        if (!SelectedState.HasValue || SelectedState.Current is null)
        {
            Snackbar.Add("لم يتم اختيار موظف.", Severity.Warning);
            Navigation.NavigateTo("/employees");
            return;
        }
        Employee = SelectedState.Current;
    }

    private string GetInitials(string? name)
    {
        if (string.IsNullOrWhiteSpace(name)) return "؟";
        var p = name.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        return p.Length == 1 ? p[0][0].ToString() : $"{p[0][0]}{p[^1][0]}";
    }

    // ===== الإقامات =====
    private async Task RenewResidence()
    {
        var prms = new DialogParameters
        {
            ["Employee"] = Employee,
            ["IsRenew"] = true
        };

        var opts = new DialogOptions
        {
            CloseOnEscapeKey = true,
            NoHeader = true,
            CloseButton = false,
            MaxWidth = MaxWidth.False,
            FullWidth = false,
            Position = DialogPosition.CenterRight,
            BackgroundClass = "side-sheet-overlay",
        };

        var dialogRef = DialogService.Show<IssueIqamaDialog>(string.Empty, prms, opts);
        var result = await dialogRef.Result;

        if (result.Canceled) return;

        if (result.Data is ApiResultModel api && api.Content is IqamaInfoDto info)
        {
            _residencies.Add(new ResidencyRow
            {
                IqamaNumber = info.IqamaNumber,
                EmployeeNumber = Employee.Id.ToString() ?? "-",
                EmployeeName = Employee.FullName ?? "-",
                ActionType = "تجديد",
                IqamaProfession = info.Occupation?.Ar ?? "-",
                IssueNumber = info.OrganizationMOINumber ?? "-",
                IssueDate = DateTime.Now,
                IqamaExpiryDateG = info.IqamaExpiryDateG,
                IqamaExpiryDateH = info.IqamaExpiryDateH,
                Nationality = info.Nationality?.Ar ?? "-",
                Religion = info.Religion?.Ar ?? "-"
            });
            Snackbar.Add("تم تجديد الإقامة بنجاح.", Severity.Success);
        }
    }

    private async Task IssueResidence()
    {
        var prms = new DialogParameters
        {
            ["Employee"] = Employee,
            ["IsRenew"] = false
        };

        var opts = new DialogOptions
        {
            CloseOnEscapeKey = true,
            NoHeader = true,
            CloseButton = false,
            MaxWidth = MaxWidth.False,
            FullWidth = false,
            Position = DialogPosition.CenterRight,
            BackgroundClass = "side-sheet-overlay",
        };

        var dialogRef = DialogService.Show<IssueIqamaDialog>(string.Empty, prms, opts);
        var result = await dialogRef.Result;

        if (result.Canceled) return;
        var x = result.Data as ApiResultModel;
        var info = JsonConvert.DeserializeObject<IqamaInfoDto>(x.Content.ToString());
      //  if (items.l result.Data is ApiResultModel api && api.Content is IqamaInfoDto info)
        if (info != null)
        {
            _residencies.Add(new ResidencyRow
            {
                IqamaNumber = info.IqamaNumber,
                EmployeeNumber = Employee.Id.ToString() ?? "-",
                EmployeeName = Employee.FullName ?? "-",
                ActionType = "إصدار",
                IqamaProfession = info.Occupation?.Ar ?? "-",
                IssueNumber = info.OrganizationMOINumber ?? "-",
                IssueDate = DateTime.Now,
                IqamaExpiryDateG = info.IqamaExpiryDateG,
                IqamaExpiryDateH = info.IqamaExpiryDateH,
                Nationality = info.Nationality?.Ar ?? "-",
                Religion = info.Religion?.Ar ?? "-"
            });
            Snackbar.Add("تم إصدار الإقامة بنجاح.", Severity.Success);
        }
    }

    private void EditResidency(ResidencyRow r) =>
        Snackbar.Add($"تعديل إقامة رقم {r.IqamaNumber}", Severity.Info);

    private void DeleteResidency(ResidencyRow r) =>
        Snackbar.Add($"حذف إقامة رقم {r.IqamaNumber}", Severity.Warning);

    // ===== ResidencyRow محدث =====
    private class ResidencyRow
    {
        public string IqamaNumber { get; set; } = "";
        public string EmployeeNumber { get; set; } = "";
        public string EmployeeName { get; set; } = "";
        public string ActionType { get; set; } = "";
        public string IqamaProfession { get; set; } = "";
        public string IssueNumber { get; set; } = "";
        public DateTime? IssueDate { get; set; }
        public DateTime? IqamaExpiryDateG { get; set; }
        public string? IqamaExpiryDateH { get; set; }
        public string Nationality { get; set; } = "";
        public string Religion { get; set; } = "";
    }
}
