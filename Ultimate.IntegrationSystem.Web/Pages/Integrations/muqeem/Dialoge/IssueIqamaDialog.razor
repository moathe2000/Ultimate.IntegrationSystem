@using Microsoft.JSInterop
@using MudBlazor
@using Ultimate.IntegrationSystem.Web.Dto
@using Ultimate.IntegrationSystem.Web.Map
@using Ultimate.IntegrationSystem.Web.Models
@using Ultimate.IntegrationSystem.Web.Service
@using Ultimate.IntegrationSystem.Web.Service.Muqeem

<MudDialog Class="side-sheet side-sheet-left" MaxWidth="MaxWidth.False" FullWidth="false" Style="--sheet-w:560px">
    <DialogContent>

        <!-- Header -->
        <div class="sheet-header">
            <MudIconButton Icon="@Icons.Material.Filled.ArrowBackIos" OnClick="@Cancel" />
            <MudText Typo="Typo.h6" Class="ml-2">
                @(IsRenew ? "تجديد إقامة" : "إصدار إقامة جديدة")
            </MudText>
            <MudSpacer />
            <MudIconButton Icon="@Icons.Material.Filled.Close" OnClick="@Cancel" />
        </div>

        <!-- بطاقة الموظف (مُحسّنة) -->
        <MudPaper Class="pa-3 mb-3">
            <div class="d-flex align-center" dir="rtl">
                <MudAvatar Size="Size.Medium" Color="Color.Primary">
                    @GetInitials(Employee?.FullName)
                </MudAvatar>

                <div class="mr-3">
                    <MudText Typo="Typo.subtitle2" Variant="Variant.Outlined" >@Employee?.FullName</MudText>
                    <MudText Typo="Typo.caption" Color="Color.Secondary">
                        @(!string.IsNullOrWhiteSpace(Employee?.JobTitle)
                                                ? Employee.JobTitle
                                                : Employee?.Department)
                    </MudText>
                    @* <MudStack Direction="Row" Spacing="1" Class="mt-1" Wrap="Wrap.Wrap">
                        @if (!string.IsNullOrWhiteSpace(Employee?.IqamaId))
                        {
                            <MudChip T="string" Variant="Variant.Outlined" Icon="@Icons.Material.Filled.Badge">
                                إقامة: @Employee.IqamaId
                            </MudChip>
                        }
                        @if (!string.IsNullOrWhiteSpace(Employee?.BorderId))
                        {
                            <MudChip T="string" Variant="Variant.Outlined" Icon="@Icons.Material.Filled.BorderBottom">
                                حدود: @Employee.BorderId
                            </MudChip>
                        }
                        @if (!string.IsNullOrWhiteSpace(Employee?.BirthCountry))
                        {
                            <MudChip T="string" Variant="Variant.Outlined" Icon="@Icons.Material.Filled.Flag">
                                الجنسية: @Employee.BirthCountry
                            </MudChip>
                        }
                    </MudStack> *@
                </div>

                <MudSpacer />

                <MudTooltip Text="عرض ملف الموظف">
                    <MudIconButton Icon="@Icons.Material.Outlined.OpenInNew"
                                   OnClick="@(() => OpenEmployeeProfile(Employee))" />
                </MudTooltip>
            </div>
        </MudPaper>

        <!-- النموذج -->
        <MudForm @ref="_form"
                 Model="@Model"
                 Immediate="true"
                 ValidationDelay="150">

            <fieldset disabled="@busy" style="border:0;padding:0;margin:0">
                <div class="sheet-body" dir="rtl">

                    <!-- مجموعة الحقول الأساسية -->
                    <MudPaper Elevation="0" Class="card">

                        <MudGrid RightToLeft="RightToLeft.Yes" GutterSize="GutterSize.Small">

                            @if (IsRenew)
                            {
                                <!-- يظهر فقط عند التجديد -->
                                <MudItem xs="12" md="6">
                                    <MudTextField @bind-Value="Model.IqamaNumber"
                                                  Label="رقم الإقامة"
                                                  Dense="true"
                                                  ReadOnly="@PrefillIqamaReadOnly"
                                                  InputType="InputType.Telephone"
                                                  MaxLength="10"
                                                  Class="rtl-field"
                                                  Required="true"
                                                  RequiredError="رقم الإقامة مطلوب."
                                                  Validation="@(new Func<string?, IEnumerable<string>>(ValidateIqamaNumber))" />
                                </MudItem>
                            }
                            else
                            {
                                <!-- حقول الإصدار -->
                                <MudItem xs="12" md="6">
                                    <MudTextField @bind-Value="Model.BorderNumber"
                                                  Label="رقم الحدود"
                                                  Dense="true"
                                                  InputType="InputType.Telephone"
                                                  MaxLength="10"
                                                  Class="rtl-field"
                                                  Required="true"
                                                  RequiredError="رقم الحدود مطلوب."
                                                  HelperText="10 أرقام تبدأ بـ 3 أو 4 أو 5"
                                                  Validation="@(new Func<string?, IEnumerable<string>>(ValidateBorderNumber))" />
                                </MudItem>

                                <MudItem xs="12" md="6">
                                    <MudTextField @bind-Value="Model.PassportIssueCity"
                                                  Label="مدينة إصدار الجواز"
                                                  Dense="true"
                                                  Class="rtl-field"
                                                  Required="true"
                                                  RequiredError="مدينة إصدار الجواز مطلوبة." />
                                </MudItem>
                            }

                            <MudItem xs="12" md="6">
                                <MudSelect T="int"
                                           @bind-Value="Model.IqamaDuration"
                                           Label="مدة الإقامة (شهر)"
                                           Dense="true"
                                           Class="rtl-field"
                                           Required="true"
                                           RequiredError="اختر مدة الإقامة.">
                                    <MudSelectItem Value="12">12</MudSelectItem>
                                    <MudSelectItem Value="24">24</MudSelectItem>
                                </MudSelect>
                            </MudItem>

                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="Model.BirthCountryCode"
                                              Label="رمز دولة الميلاد"
                                              Dense="true"
                                              Class="rtl-field"
                                              Required="true"
                                              RequiredError="رمز دولة الميلاد مطلوب."
                                              HelperText="مثال: EGY, IND, PAK أو كود حسب متطلباتك"
                                              Validation="@(new Func<string?, IEnumerable<string>>(ValidateCountryCode))" />
                            </MudItem>

                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="Model.MaritalStatus"
                                              Label="الحالة الاجتماعية (كود)"
                                              Dense="true"
                                              Class="rtl-field"
                                              Required="true"
                                              RequiredError="الحالة الاجتماعية مطلوبة." />
                            </MudItem>
                        </MudGrid>
                    </MudPaper>

                    @if (!IsRenew)
                    {
                        <!-- الاسم الإنجليزي لسيناريو الإصدار -->
                        <MudPaper Elevation="0" Class="card mt-2 en-block">
                            <MudText Typo="Typo.subtitle2" Class="card-title">
                                <MudIcon Icon="@Icons.Material.Filled.Translate" Color="Color.Primary" />
                                <span class="mr-1">الاسم بالإنجليزية</span>
                            </MudText>

                            <MudGrid RightToLeft="RightToLeft.No" GutterSize="GutterSize.Small">
                                <MudItem xs="12" md="6">
                                    <MudTextField @bind-Value="Model.TrFirstName"
                                                  Label="First Name (EN)"
                                                  Dense="true"
                                                  Required="true"
                                                  RequiredError="First name is required."
                                                  Validation="@(new Func<string?, IEnumerable<string>>(ValidateEnWord))" />
                                </MudItem>
                                <MudItem xs="12" md="6">
                                    <MudTextField @bind-Value="Model.TrFatherName"
                                                  Label="Father Name (EN)"
                                                  Dense="true"
                                                  Required="true"
                                                  RequiredError="Father name is required."
                                                  Validation="@(new Func<string?, IEnumerable<string>>(ValidateEnWord))" />
                                </MudItem>
                                <MudItem xs="12" md="6">
                                    <MudTextField @bind-Value="Model.TrGrandFatherName"
                                                  Label="Grand Father Name (EN)"
                                                  Dense="true"
                                                  Required="true"
                                                  RequiredError="Grand father name is required."
                                                  Validation="@(new Func<string?, IEnumerable<string>>(ValidateEnWord))" />
                                </MudItem>
                                <MudItem xs="12" md="6">
                                    <MudTextField @bind-Value="Model.TrFamilyName"
                                                  Label="Family Name (EN)"
                                                  Dense="true"
                                                  Required="true"
                                                  RequiredError="Family name is required."
                                                  Validation="@(new Func<string?, IEnumerable<string>>(ValidateEnWord))" />
                                </MudItem>
                            </MudGrid>
                        </MudPaper>
                    }
                </div>
            </fieldset>

            <!-- أزرار التنفيذ -->
            <div class="d-flex justify-end gap-2 pb-3 px-2">
                <MudButton Variant="Variant.Outlined" OnClick="@Cancel">إغلاق</MudButton>
                <MudButton Color="Color.Primary"
                           StartIcon="@Icons.Material.Filled.Send"
                           OnClick="@Submit"
                           Disabled="@submitting">
                    @if (submitting)
                    {
                        <MudProgressCircular Indeterminate="true" Size="Size.Small" Class="mr-2" />
                    }
                    @(IsRenew ? "تجديد في مقيم" : "إرسال إلى مقيم")
                </MudButton>
            </div>
        </MudForm>
    </DialogContent>
</MudDialog>

@code {
    // ========== Parameters & Injects ==========
    [CascadingParameter] public IMudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public EmployeeDto Employee { get; set; } = new();
    [Parameter] public bool IsRenew { get; set; } = false;
    [Parameter] public string? IqamaNumberFromRow { get; set; } // لو فتحت الدايالوج من زر صفّي

    [Inject] IIqamaService IqamaSrv { get; set; } = default!;
    [Inject] ISnackbar Snackbar { get; set; } = default!;
    [Inject] NavigationManager Nav { get; set; } = default!;

    // ========== State ==========
    private MudForm? _form;
    private bool busy = false;
    private bool submitting = false;
    private bool PrefillIqamaReadOnly => !string.IsNullOrWhiteSpace(IqamaNumberFromRow);

    private IqamaModel Model { get; set; } = new();

    // ========== Model ==========
    

    // ========== Init ==========
    protected override void OnInitialized()
    {
        // تعبئة مبدئية من بيانات الموظف
        Model.BorderNumber = Employee?.BorderId ?? "";
        Model.BirthCountryCode = Employee?.BirthCountry ?? "";
        Model.MaritalStatus = Employee?.MaritalStatus ?? "";
        //  Model.PassportIssueCity = string.IsNullOrWhiteSpace(Employee?.PassportIssueCity) ? "" : Employee!.PassportIssueCity!;
        Model.IqamaNumber = Employee?.IqamaId ?? "";

        // إن فُتح الدايالوج عبر زر الصف، اجعل رقم الإقامة منه
        if (!string.IsNullOrWhiteSpace(IqamaNumberFromRow))
            Model.IqamaNumber = IqamaNumberFromRow!;

        // أسماء انجليزية (fallback للأسماء العربية لو غير متوفرة EN)
        Model.TrFirstName = Employee?.FirstNameEn ?? Employee?.FirstName ?? "";
        Model.TrFatherName = Employee?.MiddleNameEn ?? Employee?.MiddleName ?? "";
        Model.TrGrandFatherName = Employee?.ThirdNameEn ?? Employee?.ThirdName ?? "";
        Model.TrFamilyName = Employee?.LastNameEn ?? Employee?.LastName ?? "";
    }

    // ========== Validators (تظهر أخطاء حمراء أسفل الحقول) ==========
    private IEnumerable<string> ValidateIqamaNumber(string? v)
    {
        if (string.IsNullOrWhiteSpace(v))
            yield break; // RequiredError سيتكفّل بها
        if (!System.Text.RegularExpressions.Regex.IsMatch(v, @"^2\d{9}$"))
            yield return "رقم الإقامة يجب أن يكون 10 أرقام ويبدأ بالرقم 2.";
    }

    private IEnumerable<string> ValidateBorderNumber(string? v)
    {
        if (string.IsNullOrWhiteSpace(v))
            yield break;
        if (!System.Text.RegularExpressions.Regex.IsMatch(v, @"^[345]\d{9}$"))
            yield return "رقم الحدود يجب أن يكون 10 أرقام ويبدأ بـ 3 أو 4 أو 5.";
    }

    private IEnumerable<string> ValidateCountryCode(string? v)
    {
        if (string.IsNullOrWhiteSpace(v))
            yield break;
        // مثال بسيط: 2-3 أحرف أبجدية (عدّل حسب الكود المعتمد لديك)
        if (!System.Text.RegularExpressions.Regex.IsMatch(v, @"^[A-Za-z]{2,3}$"))
            yield return "رمز الدولة يجب أن يكون من 2 إلى 3 أحرف لاتينية.";
    }

    private IEnumerable<string> ValidateEnWord(string? v)
    {
        if (string.IsNullOrWhiteSpace(v))
            yield break;
        // أحرف لاتينية ومسافة وشرطة فقط
        if (!System.Text.RegularExpressions.Regex.IsMatch(v, @"^[A-Za-z][A-Za-z \-']{0,49}$"))
            yield return "يُسمح بحروف إنجليزية ومسافات وشرطة فقط (حتى 50 حرفًا).";
    }

    // ========== Submit ==========
    private async Task Submit()
    {
        if (_form is null || busy) return;

        // تحقّق النموذج (سيتكفّل بإظهار الأخطاء الحمراء تحت الحقول)
        await _form.Validate();
        if (!_form.IsValid)
        {
            Snackbar.Add("تحقق من الحقول المظلّلة باللون الأحمر.", Severity.Error);
            return;
        }

        busy = true;
        submitting = true;
        try
        {
            ApiResultModel api;

            if (IsRenew)
            {
                // مرّر رقم الإقامة القادم من الحقل (أوثق مصدر)
                var dto1 = MuqeemMapper.ToRenewIqama(Employee, Model.IqamaDuration, Model.IqamaNumber);
                api = await IqamaSrv.RenewAsync(dto1);
            }
            else
            {
                var dto = MuqeemMapper.ToIssueIqama(
                    Employee,
                    Model.IqamaDuration,
                    Model.BirthCountryCode,
                    Model.MaritalStatus,
                    Model.TrFirstName,
                    Model.TrFatherName,
                    Model.TrGrandFatherName,
                    Model.TrFamilyName,
                    Model.BorderNumber
                   // Model.PassportIssueCity
                );
                api = await IqamaSrv.IssueAsync(dto);
            }

            if (api.Code == 0)
            {
                Snackbar.Add(api.Message ?? "تمت العملية بنجاح.", Severity.Success);
                MudDialog?.Close(DialogResult.Ok(api));
                return;
            }

            Snackbar.Add(api.Message ?? "فشلت العملية.", Severity.Error);
        }
        catch (TaskCanceledException)
        {
            Snackbar.Add("انتهت مهلة الاتصال (Timeout).", Severity.Error);
        }
        catch (HttpRequestException)
        {
            Snackbar.Add("تعذّر الاتصال بالخادم.", Severity.Error);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"خطأ غير متوقع: {ex.Message}", Severity.Error);
        }
        finally
        {
            busy = false;
            submitting = false;
            StateHasChanged();
        }
    }

    // ========== Helpers ==========
    private void Cancel() => MudDialog?.Close(DialogResult.Cancel());

    private string GetInitials(string? name)
    {
        if (string.IsNullOrWhiteSpace(name)) return "؟";
        var p = name.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        return p.Length == 1 ? p[0][0].ToString() : $"{p[0][0]}{p[^1][0]}";
    }

    private void OpenEmployeeProfile(EmployeeDto? emp)
    {
        if (emp is null) return;
        Nav.NavigateTo($"/employees/{emp.Id}");
    }
}

<style>
    .side-sheet .sheet-header {
        padding: 12px 16px;
        border-bottom: 1px solid rgba(0,0,0,.08);
    }

    .side-sheet .sheet-body {
        padding: 12px 16px;
    }

    .side-sheet .card {
        padding: 12px;
        border: 1px solid rgba(0,0,0,.08);
        border-radius: 12px;
    }

    .card-title {
        margin-bottom: 6px;
    }

    [dir="rtl"] .rtl-field .mud-input-label {
        right: 14px;
        left: auto;
        transform-origin: right top;
    }

    [dir="rtl"] .rtl-field .mud-input-slot,
    [dir="rtl"] .rtl-field input,
    [dir="rtl"] .rtl-field .mud-select-value {
        text-align: right;
    }
</style>
