@using Microsoft.JSInterop
@using MudBlazor
@using Ultimate.IntegrationSystem.Web.Dto
@using Ultimate.IntegrationSystem.Web.Map
@using Ultimate.IntegrationSystem.Web.Models
@using Ultimate.IntegrationSystem.Web.Service
@using Ultimate.IntegrationSystem.Web.Service.Muqeem

<MudDialog Class="side-sheet side-sheet-left" MaxWidth="MaxWidth.False" FullWidth="false" Style="--sheet-w:560px">
    <DialogContent>

        <div class="sheet-header">
            <MudIconButton Icon="@Icons.Material.Filled.ArrowBackIos" OnClick="@Cancel" />
            <MudText Typo="Typo.h6" Class="ml-2">
                @(IsRenew ? "تجديد إقامة" : "إصدار إقامة جديدة")
            </MudText>
            <MudSpacer />
            <MudIconButton Icon="@Icons.Material.Filled.Close" OnClick="@Cancel" />
        </div>

        <MudPaper Class="pa-3 mb-3">
            <div class="d-flex align-center">
                <MudAvatar Size="Size.Medium" Color="Color.Primary">Initials</MudAvatar>
                <div class="ml-3">
                    <MudText Typo="Typo.subtitle2">EmployeeTitle</MudText>
                    <MudText Typo="Typo.caption" Color="Color.Secondary">EmployeeCaption</MudText>
                </div>
                <MudSpacer />
                <MudTooltip Text="عرض ملف الموظف">
                    <MudIconButton Icon="@Icons.Material.Outlined.OpenInNew" />
                </MudTooltip>
            </div>
        </MudPaper>

        <MudForm @ref="_form" Model="@Model" OnValidSubmit="Submit">
            <fieldset disabled="@busy" style="border:0;padding:0;margin:0">

                <div class="sheet-body" dir="rtl">
                    <MudPaper Elevation="0" Class="card">
                        <MudText Typo="Typo.subtitle1" Class="card-title">
                            <MudIcon Icon="@Icons.Material.Filled.Info" Color="Color.Primary" /> البيانات الأساسية
                        </MudText>

                        <MudGrid id="iqama-basic" RightToLeft="RightToLeft.Yes" GutterSize="GutterSize.Small">
                            <MudItem xs="12" md="6" Class="col-name">
                                <MudTextField Label="اسم الموظف" Value="@Employee.FullName" ReadOnly="true" Dense="true" Class="rtl-field" />
                            </MudItem>

                            <MudItem xs="12" md="6" Class="col-number">
                                <MudTextField Label="رقم الموظف" Value="@Employee.Id" ReadOnly="true" Dense="true" Class="rtl-field" />
                            </MudItem>

                            @if (IsRenew)
                            {
                                <!-- يظهر فقط عند التجديد -->
                                <MudItem xs="12" md="6">
                                    <MudTextField Label="رقم الإقامة"
                                                  @bind-Value="Model.IqamaNumber"
                                                  Dense="true"
                                                  InputType="InputType.Telephone"
                                                  MaxLength="10"
                                                  HelperText="10 أرقام"
                                                  TextAlign="TextAlign.Start"
                                                  Class="rtl-field" />
                                </MudItem>
                            }
                            else
                            {
                                <!-- تختفي هذه الحقول عند التجديد -->
                                <MudItem xs="12" md="6">
                                    <MudTextField Label="رقم الحدود"
                                                  @bind-Value="Model.BorderNumber"
                                                  Dense="true"
                                                  InputType="InputType.Telephone"
                                                  MaxLength="10"
                                                  HelperText="10 أرقام تبدأ بـ 3 أو 4 أو 5"
                                                  TextAlign="TextAlign.Start"
                                                  Class="rtl-field" />
                                </MudItem>

                                <MudItem xs="12" md="6">
                                    <MudTextField Label="مدينة إصدار الجواز"
                                                  @bind-Value="Model.PassportIssueCity"
                                                  Dense="true"
                                                  Class="rtl-field" />
                                </MudItem>
                            }

                            <MudItem xs="12" md="6">
                                <MudSelect T="int" Label="مدة الإقامة (شهر)"
                                           @bind-Value="Model.IqamaDuration"
                                           Dense="true" Class="rtl-field">
                                    <MudSelectItem Value="12">12</MudSelectItem>
                                    <MudSelectItem Value="24">24</MudSelectItem>
                                </MudSelect>
                            </MudItem>

                            <MudItem xs="12" md="6">
                                <MudTextField Label="رمز دولة الميلاد"
                                              @bind-Value="Model.BirthCountryCode"
                                              Dense="true" Class="rtl-field" />
                            </MudItem>

                            <MudItem xs="12" md="6">
                                <MudTextField Label="الحالة الاجتماعية"
                                              @bind-Value="Model.MaritalStatus"
                                              Dense="true" Class="rtl-field" />
                            </MudItem>
                        </MudGrid>
                    </MudPaper>

                    @if (!IsRenew)
                    {
                        <MudPaper Elevation="0" Class="card mt-2 en-block">
                            <MudText Typo="Typo.subtitle1" Class="card-title">
                                <MudIcon Icon="@Icons.Material.Filled.Translate" Color="Color.Primary" /> الاسم بالإنجليزية
                            </MudText>

                            <MudGrid RightToLeft="RightToLeft.No" GutterSize="GutterSize.Small">
                                <MudItem xs="12" md="6">
                                    <MudTextField Label="First Name (EN)"
                                                  @bind-Value="Model.TrFirstName"
                                                  Dense="true" />
                                </MudItem>
                                <MudItem xs="12" md="6">
                                    <MudTextField Label="Father Name (EN)"
                                                  @bind-Value="Model.TrFatherName"
                                                  Dense="true" />
                                </MudItem>
                                <MudItem xs="12" md="6">
                                    <MudTextField Label="Grand Father Name (EN)"
                                                  @bind-Value="Model.TrGrandFatherName"
                                                  Dense="true" />
                                </MudItem>
                                <MudItem xs="12" md="6">
                                    <MudTextField Label="Family Name (EN)"
                                                  @bind-Value="Model.TrFamilyName"
                                                  Dense="true" />
                                </MudItem>
                            </MudGrid>
                        </MudPaper>
                    }
                </div>
            </fieldset>

            <div class="d-flex justify-end gap-2 pb-3 px-2">
                <MudButton Variant="Variant.Outlined" OnClick="@Cancel">إغلاق</MudButton>
                <MudButton Color="Color.Primary" StartIcon="@Icons.Material.Filled.Send"
                           OnClick="@Submit" Disabled="@submitting">
                    @if (submitting)
                    {
                        <MudProgressCircular Indeterminate="true" Size="Size.Small" Class="mr-2" />
                    }
                    @(IsRenew ? "تجديد في مقيم" : "إرسال إلى مقيم")
                </MudButton>
            </div>
        </MudForm>
    </DialogContent>
</MudDialog>

@code {
    // النسخة 8: استخدم IMudDialogInstance
    [CascadingParameter] public IMudDialogInstance MudDialog { get; set; } = default!;

    [Parameter] public EmployeeDto Employee { get; set; } = new();
    [Parameter] public bool IsRenew { get; set; } = false;

    [Inject] IIqamaService IqamaSrv { get; set; } = default!;
    [Inject] ISnackbar Snackbar { get; set; } = default!;

    private MudForm? _form;
    private bool busy = false;
    private bool submitting;
    private IqamaModel Model { get; set; } = new();

    public class IqamaModel
    {
        // لا نضع Required هنا لأن الحقول تُعرض/تُخفى شرطياً
        public string BorderNumber { get; set; } = "";
        public int IqamaDuration { get; set; } = 12;
        public string BirthCountryCode { get; set; } = "";
        public string MaritalStatus { get; set; } = "";
        public string PassportIssueCity { get; set; } = "";

        // الحقل الجديد لسيناريو التجديد
        public string IqamaNumber { get; set; } = "";

        // أسماء إنجليزية لسيناريو الإصدار
        public string TrFirstName { get; set; } = "";
        public string TrFatherName { get; set; } = "";
        public string TrGrandFatherName { get; set; } = "";
        public string TrFamilyName { get; set; } = "";
    }

    protected override void OnInitialized()
    {
        Model.BorderNumber = Employee?.BorderId ?? "";
        Model.BirthCountryCode = Employee?.BirthCountry ?? "";
        Model.MaritalStatus = Employee?.MaritalStatus ?? "";
        Model.PassportIssueCity = "txz" ?? "";
        Model.IqamaNumber = Employee?.IqamaId ?? ""; // لو كان متوفراً في بيانات الموظف

        Model.TrFirstName = Employee?.FirstNameEn ?? Employee?.FirstName;
        Model.TrFatherName = Employee?.MiddleNameEn ?? Employee?.MiddleName;
        Model.TrGrandFatherName = Employee?.ThirdNameEn ?? Employee?.ThirdName;
        Model.TrFamilyName = Employee?.LastNameEn ?? Employee?.LastName;
    }

    private bool ValidateManually()
    {
        // تحققات مرنة حسب السيناريو
        if (IsRenew)
        {
            if (string.IsNullOrWhiteSpace(Model.IqamaNumber))
            {
                Snackbar.Add("رقم الإقامة مطلوب في حالة التجديد.", Severity.Warning);
                return false;
            }
            if (!System.Text.RegularExpressions.Regex.IsMatch(Model.IqamaNumber, @"^\d{10}$"))
            {
                Snackbar.Add("رقم الإقامة يجب أن يكون 10 أرقام.", Severity.Warning);
                return false;
            }
        }
        else
        {
            if (string.IsNullOrWhiteSpace(Model.BorderNumber))
            {
                Snackbar.Add("رقم الحدود مطلوب في حالة الإصدار الجديد.", Severity.Warning);
                return false;
            }
            if (!System.Text.RegularExpressions.Regex.IsMatch(Model.BorderNumber, @"^[345]\d{9}$"))
            {
                Snackbar.Add("رقم الحدود يجب أن يكون 10 أرقام ويبدأ بـ 3 أو 4 أو 5.", Severity.Warning);
                return false;
            }
            if (string.IsNullOrWhiteSpace(Model.BirthCountryCode))
            {
                Snackbar.Add("رمز دولة الميلاد مطلوب.", Severity.Warning);
                return false;
            }
            // يمكن إضافة تحقق للاسم الإنجليزي إن أردت جعله إلزاميًا
        }

        // تحقق مشترك
        if (Model.IqamaDuration != 12 && Model.IqamaDuration != 24)
        {
            Snackbar.Add("مدة الإقامة يجب أن تكون 12 أو 24 شهرًا.", Severity.Warning);
            return false;
        }

        return true;
    }

    private async Task Submit()
    {
        if (_form is null || busy) return;

        // نجري التحقق الشكلي (MudForm) أولاً لمن لديه Validators مخصّصة أخرى
        await _form.Validate();

        // ثم التحقق اليدوي الشرطي (الأهم هنا)
        if (!ValidateManually())
            return;

        busy = true;
        submitting = true;
        try
        {
            ApiResultModel api;

            if (IsRenew)
            {
                var dto = MuqeemMapper.ToRenewIqama(Employee, Model.IqamaDuration);

                // إن كانت خاصية رقم الإقامة موجودة في DTO، مرّرها هنا:
                // dto.IqamaNumber = Model.IqamaNumber;

                api = await IqamaSrv.RenewAsync(dto);
            }
            else
            {
                var dto = MuqeemMapper.ToIssueIqama(
                    Employee,
                    Model.IqamaDuration,
                    Model.BirthCountryCode,
                    Model.MaritalStatus,
                    Model.TrFirstName, Model.TrFatherName, Model.TrGrandFatherName, Model.TrFamilyName,
                    Model.BorderNumber

                );
                api = await IqamaSrv.IssueAsync(dto);
            }

            if (api.Code == 0)
            {
                Snackbar.Add(api.Message ?? "تمت العملية بنجاح.", Severity.Success);
                MudDialog?.Close(DialogResult.Ok(api));
                return;
            }

            Snackbar.Add(api.Message ?? "فشلت العملية.", Severity.Error);
        }
        catch (TaskCanceledException)
        {
            Snackbar.Add("انتهت مهلة الاتصال (Timeout).", Severity.Error);
        }
        catch (HttpRequestException)
        {
            Snackbar.Add("تعذّر الاتصال بالخادم.", Severity.Error);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"خطأ غير متوقع: {ex.Message}", Severity.Error);
        }
        finally
        {
            busy = false;
            submitting = false;
            StateHasChanged();
        }
    }

    private void Cancel() => MudDialog?.Close(DialogResult.Cancel());
}

<style>
    .w-100 {
        width: 100%;
    }

    .sticky-footer {
        position: sticky;
        bottom: 0;
        z-index: 2;
        background: var(--mud-palette-background);
        padding: 12px 16px;
        border-top: 1px solid rgba(0,0,0,.08);
    }

        .sticky-footer.two-cols {
            display: flex;
            gap: .5rem;
        }

            .sticky-footer.two-cols > .mud-button-root {
                flex: 1 1 0;
            }

    .side-sheet .sheet-header {
        padding: 12px 16px;
        border-bottom: 1px solid rgba(0,0,0,.08);
    }

    .side-sheet .sheet-body {
        padding: 12px 16px;
    }

    .side-sheet .card {
        padding: 12px;
        border: 1px solid rgba(0,0,0,.08);
        border-radius: 12px;
    }

    .side-sheet .card-title {
        margin-bottom: 6px;
    }

    [dir="rtl"] .rtl-field .mud-input-label {
        right: 14px;
        left: auto;
        transform-origin: right top;
    }

        [dir="rtl"] .rtl-field .mud-input-label.mud-shrink {
            transform-origin: right top;
        }

    [dir="rtl"] .rtl-field .mud-input-slot,
    [dir="rtl"] .rtl-field input,
    [dir="rtl"] .rtl-field .mud-select-value {
        text-align: right;
    }
</style>
