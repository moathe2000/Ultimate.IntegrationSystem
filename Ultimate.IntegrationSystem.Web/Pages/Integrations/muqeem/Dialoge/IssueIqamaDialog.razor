@using MudBlazor
@using Microsoft.JSInterop
@using Ultimate.IntegrationSystem.Web.Map
@using Ultimate.IntegrationSystem.Web.Models


    <MudDialog Class="side-sheet-left" MaxWidth="MaxWidth.False" FullWidth="false">
    <DialogContent>

        <!-- Header -->
        <div class="sheet-header">
            <MudStack Direction="Row" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
                <MudStack Direction="Row" AlignItems="AlignItems.Center" Spacing="1">
                    <MudIcon Icon="@Icons.Material.Filled.Badge" Color="Color.Primary" />
                    <MudText Typo="Typo.h6">@(IsRenew ? "تجديد الإقامة" : "إصدار الإقامة")</MudText>
                </MudStack>
                <MudIconButton Icon="@Icons.Material.Filled.Close" OnClick="Cancel" Disabled="@busy" />
            </MudStack>
        </div>

        <MudForm @ref="_form" Model="@Model">

            <!-- Body -->
            <div class="sheet-body">

                <!-- البيانات الأساسية -->
                <MudPaper Elevation="0" Class="card">
                    <MudText Typo="Typo.subtitle1" Class="mb-2">البيانات الأساسية</MudText>

                    <MudGrid RightToLeft="RightToLeft.Yes" GutterSize="GutterSize.Small">
                        <MudItem xs="12" md="6">
                            <MudTextField Label="اسم الموظف" Value="@Employee.EmployeeName" ReadOnly="true" Dense="true"
                                          Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Badge" />
                        </MudItem>

                        <MudItem xs="12" md="6">
                            <MudTextField Label="رقم الموظف" Value="@Employee.EmployeeNumber" ReadOnly="true" Dense="true"
                                          Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Tag" />
                        </MudItem>

                        <MudItem xs="12" md="6">
                            <MudTextField Label="رقم الحدود"
                                          @bind-Value="Model.BorderNumber"
                                          For="@(() => Model.BorderNumber)"
                                          Dense="true" Required="true"
                                          Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.QrCode2"
                                          InputType="InputType.Telephone" MaxLength="10"
                                          HelperText="10 أرقام تبدأ بـ 3 أو 4 أو 5" />
                        </MudItem>

                        <MudItem xs="12" md="6">
                            <MudSelect T="int" Label="مدة الإقامة (شهر)"
                                       @bind-Value="Model.IqamaDuration" For="@(() => Model.IqamaDuration)"
                                       Dense="true" Required="true">
                                <MudSelectItem Value="12">12</MudSelectItem>
                                <MudSelectItem Value="24">24</MudSelectItem>
                            </MudSelect>
                        </MudItem>

                        <MudItem xs="12" md="6">
                            <MudTextField Label="رمز دولة الميلاد"
                                          @bind-Value="Model.BirthCountryCode" For="@(() => Model.BirthCountryCode)"
                                          Dense="true" Required="true"
                                          Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Public" />
                        </MudItem>

                        <MudItem xs="12" md="6">
                            <MudTextField Label="الحالة الاجتماعية"
                                          @bind-Value="Model.MaritalStatus" For="@(() => Model.MaritalStatus)"
                                          Dense="true"
                                          Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.FavoriteBorder" />
                        </MudItem>

                        <MudItem xs="12" md="6">
                            <MudTextField Label="مدينة إصدار الجواز"
                                          @bind-Value="Model.PassportIssueCity" For="@(() => Model.PassportIssueCity)"
                                          Dense="true"
                                          Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.LocationCity" />
                        </MudItem>
                    </MudGrid>
                </MudPaper>

                @if (!IsRenew)
                {
                    <!-- الاسم بالإنجليزية -->
                    <MudPaper Elevation="0" Class="card mt-2">
                        <MudText Typo="Typo.subtitle1" Class="mb-2">الاسم بالإنجليزية</MudText>

                        <MudGrid RightToLeft="RightToLeft.Yes" GutterSize="GutterSize.Small">
                            <MudItem xs="12" md="6">
                                <MudTextField Label="First Name (EN)"
                                              @bind-Value="Model.TrFirstName" For="@(() => Model.TrFirstName)"
                                              Dense="true" Required="true" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudTextField Label="Father Name (EN)"
                                              @bind-Value="Model.TrFatherName" For="@(() => Model.TrFatherName)"
                                              Dense="true" Required="true" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudTextField Label="Grand Father Name (EN)"
                                              @bind-Value="Model.TrGrandFatherName" For="@(() => Model.TrGrandFatherName)"
                                              Dense="true" Required="true" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <MudTextField Label="Family Name (EN)"
                                              @bind-Value="Model.TrFamilyName" For="@(() => Model.TrFamilyName)"
                                              Dense="true" Required="true" />
                            </MudItem>
                        </MudGrid>
                    </MudPaper>
                }
            </div>

            <!-- Footer -->
            <div class="sheet-footer">
                <MudButton Variant="Variant.Outlined" Color="Color.Default" OnClick="Cancel" Disabled="@busy">إلغاء</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Primary"
                           Type="ButtonType.Submit"
                           OnClick="Submit"
                           Disabled="@busy"
                           Loading="@busy"
                           StartIcon="@Icons.Material.Filled.Send">
                    إرسال إلى مقيم
                </MudButton>
            </div>

        </MudForm>

    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter] public IDialogReference DialogRef { get; set; } = default!;
    [Parameter] public EmployeeDto Employee { get; set; } = new();
    [Parameter] public bool IsRenew { get; set; } = false;

    private MudForm? _form;
    private bool busy;

    private IqamaModel Model { get; set; } = new();

    public class IqamaModel
    {
        [System.ComponentModel.DataAnnotations.Required(ErrorMessage = "رقم الحدود مطلوب")]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{10}$", ErrorMessage = "رقم الحدود يجب أن يكون 10 أرقام")]
        public string BorderNumber { get; set; } = "";

        [System.ComponentModel.DataAnnotations.Required]
        public int IqamaDuration { get; set; } = 12;

        [System.ComponentModel.DataAnnotations.Required(ErrorMessage = "رمز الدولة مطلوب")]
        public string BirthCountryCode { get; set; } = "";

        public string MaritalStatus { get; set; } = "";
        public string PassportIssueCity { get; set; } = "";

        // أسماء إنجليزية مطلوبة فقط عند الإصدار (نتحقق برمجياً قبل الإرسال)
        public string TrFirstName { get; set; } = "";
        public string TrFatherName { get; set; } = "";
        public string TrGrandFatherName { get; set; } = "";
        public string TrFamilyName { get; set; } = "";
    }

    protected override void OnInitialized()
    {
        Model.BorderNumber = Employee?.BorderNumber ?? "";
        Model.BirthCountryCode = Employee?.BirthCountryName ?? "";
        Model.MaritalStatus = Employee?.MaritalStatusName ?? "";
        Model.PassportIssueCity = Employee?.MobileNo ?? ""; // ✔️ لا تستخدم MaritalStatus.ToString()
    }

    private async Task Submit()
    {
        if (_form is null) return;

        await _form.Validate();
        if (!_form.IsValid) return;

        // عند الإصدار، تأكد أن الأسماء الإنجليزية معبأة
        if (!IsRenew &&
            (string.IsNullOrWhiteSpace(Model.TrFirstName)
             || string.IsNullOrWhiteSpace(Model.TrFatherName)
             || string.IsNullOrWhiteSpace(Model.TrGrandFatherName)
             || string.IsNullOrWhiteSpace(Model.TrFamilyName)))
        {
            // دع الفاليديشن المرئي يتكفّل، فقط لا تُرسل
            return;
        }

        busy = true;
        try
        {
            if (IsRenew)
            {
                var dto = MuqeemMapper.ToRenewIqama(Employee, Model.IqamaDuration);
                DialogRef?.Close(DialogResult.Ok(dto));
            }
            else
            {
                var dto = MuqeemMapper.ToIssueIqama(
                    Employee,
                    Model.IqamaDuration,
                    Model.BirthCountryCode,
                    Model.MaritalStatus,
                    Model.TrFirstName, Model.TrFatherName, Model.TrGrandFatherName, Model.TrFamilyName
                );
                DialogRef?.Close(DialogResult.Ok(dto));
            }
        }
        finally { busy = false; }
    }

    private void Cancel() => DialogRef?.Close(DialogResult.Cancel());
}
